[
  // =====================================
  // üõ†Ô∏è –ü–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  // =====================================
  {
    "key": "ctrl+b",
    "command": "code-runner.run"
  },
  {
    "key": "ctrl+n",
    "command": "welcome.showNewFileEntries"
  },
  // –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
  {
    "key": "ctrl+/",
    "command": "extension.commentAndNextLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  // ====================================
  // üìÇ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å
  // ====================================
  {
    "key": "ctrl+tab",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  // ====================================
  // üß† –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ò–ò
  // ====================================
  {
    "key": "ctrl+[",
    "command": "editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "alt+w",
    "command": "codeium.cancelSnooze"
  },
  {
    "key": "ctrl+w",
    "command": "codeium.snoozeAutocomplete"
  },
  // ====================================
  // ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Vim-–º—ç–ø–ø–∏–Ω–≥–æ–≤
  // ====================================
  {
    "key": "ctrl+a",
    "command": "-extension.vim_ctrl+a",
    "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
  },
  {
    "key": "ctrl+c",
    "command": "-extension.vim_ctrl+c",
    "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
  },
  {
    "key": "ctrl+g",
    "command": "-extension.vim_ctrl+g",
    "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
  },
  {
    "key": "ctrl+v",
    "command": "-extension.vim_ctrl+v",
    "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
  },
  {
    "key": "ctrl+x",
    "command": "-extension.vim_ctrl+x",
    "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
  },
  {
    "key": "ctrl+f",
    "command": "-notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+f",
    "command": "notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook' && vim.active && vim.mode == 'Insert'"
  },
  // ====================================
  // üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—ã–≤–æ–¥ Jupyter Notebook
  // ====================================
  {
    "key": "alt+delete",
    "command": "-notebook.cell.clearOutputs",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+delete",
    "command": "notebook.cell.clearOutputs",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+delete",
    "command": "notebook.clearAllCellsOutputs",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  // ====================================
  // üñ• –¢–µ—Ä–º–∏–Ω–∞–ª Ctrl+C –∏ Ctrl+V
  // ====================================
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }
]
